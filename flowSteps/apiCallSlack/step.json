{
  "label": "API call to slack",
  "name": "apiCallSlack",
  "category": "integrations",
  "description": "This flow step will send generic request to slack",
  "inputs": [
    {
      "label": "Url",
      "name": "url",
      "description": "The method and path to which this endpoint is to send requests in a generic way.",
      "type": "urlParams",
      "required": "true",
      "options": {
        "type": "dropDown",
        "possibleValues": [
            {
              "label": "POST api.test"
            },
            {
              "label": "POST auth.test"
            },
            {
              "label": "POST channels.archive"
            },
            {
              "label": "POST channels.create"
            },
            {
              "label": "POST channels.invite"
            },
            {
              "label": "POST channels.join"
            },
            {
              "label": "POST channels.kick"
            },
            {
              "label": "POST channels.leave"
            },
            {
              "label": "POST channels.mark"
            },
            {
              "label": "POST channels.rename"
            },
            {
              "label": "POST channels.setPurpose"
            },
            {
              "label": "POST channels.setTopic"
            },
            {
              "label": "POST channels.unarchive"
            },
            {
              "label": "POST chat.delete"
            },
            {
              "label": "POST chat.meMessage"
            },
            {
              "label": "POST chat.postMessage"
            },
            {
              "label": "POST chat.unfurl"
            },
            {
              "label": "POST chat.update"
            },
            {
              "label": "POST conversations.archive"
            },
            {
              "label": "POST conversations.close"
            },
            {
              "label": "POST conversations.create"
            },
            {
              "label": "POST conversations.invite"
            },
            {
              "label": "POST conversations.join"
            },
            {
              "label": "POST conversations.kick"
            },
            {
              "label": "POST conversations.leave"
            },
            {
              "label": "POST conversations.open"
            },
            {
              "label": "POST conversations.rename"
            },
            {
              "label": "POST conversations.setPurpose"
            },
            {
              "label": "POST conversations.setTopic"
            },
            {
              "label": "POST conversations.unarchive"
            },
            {
              "label": "POST dialog.open"
            },
            {
              "label": "POST views.open"
            },
            {
              "label": "POST views.update"
            },
            {
              "label": "POST views.publish"
            },
            {
              "label": "POST views.push"
            },
            {
              "label": "POST dnd.endDnd"
            },
            {
              "label": "POST dnd.endSnooze"
            },
            {
              "label": "POST files.comments.add"
            },
            {
              "label": "POST files.comments.delete"
            },
            {
              "label": "POST files.comments.edit"
            },
            {
              "label": "POST files.delete"
            },
            {
              "label": "POST files.revokePublicURL"
            },
            {
              "label": "POST files.sharedPublicURL"
            },
            {
              "label": "POST files.upload"
            },
            {
              "label": "POST groups.archive"
            },
            {
              "label": "POST groups.close"
            },
            {
              "label": "POST groups.create"
            },
            {
              "label": "POST groups.createChild"
            },
            {
              "label": "POST groups.invite"
            },
            {
              "label": "POST groups.kick"
            },
            {
              "label": "POST groups.leave"
            },
            {
              "label": "POST groups.mark"
            },
            {
              "label": "POST groups.open"
            },
            {
              "label": "POST groups.rename"
            },
            {
              "label": "POST groups.setPurpose"
            },
            {
              "label": "POST groups.setTopic"
            },
            {
              "label": "POST groups.unarchive"
            },
            {
              "label": "POST im.close"
            },
            {
              "label": "POST im.mark"
            },
            {
              "label": "POST im.open"
            },
            {
              "label": "POST mpim.close"
            },
            {
              "label": "POST mpim.mark"
            },
            {
              "label": "POST mpim.open"
            },
            {
              "label": "POST oauth.access"
            },
            {
              "label": "POST pins.add"
            },
            {
              "label": "POST pins.remove"
            },
            {
              "label": "POST reactions.add"
            },
            {
              "label": "POST reactions.remove"
            },
            {
              "label": "POST reminders.add"
            },
            {
              "label": "POST reminders.complete"
            },
            {
              "label": "POST reminders.delete"
            },
            {
              "label": "POST stars.add"
            },
            {
              "label": "POST stars.remove"
            },
            {
              "label": "POST usergroups.create"
            },
            {
              "label": "POST usergroups.disable"
            },
            {
              "label": "POST usergroups.enable"
            },
            {
              "label": "POST usergroups.update"
            },
            {
              "label": "POST usergroups.users.update"
            },
            {
              "label": "POST users.setActive"
            },
            {
              "label": "POST users.setPhoto"
            },
            {
              "label": "POST users.setPresence"
            },
            {
              "label": "POST users.profile.set"
            },
            {
              "label": "GET auth.revoke"
            },
            {
              "label": "GET bots.info"
            },
            {
              "label": "GET channels.history"
            },
            {
              "label": "GET channels.info"
            },
            {
              "label": "GET channels.list"
            },
            {
              "label": "GET channels.replies"
            },
            {
              "label": "GET conversations.history"
            },
            {
              "label": "GET conversations.info"
            },
            {
              "label": "GET conversations.list"
            },
            {
              "label": "GET conversations.members"
            },
            {
              "label": "GET conversations.replies"
            },
            {
              "label": "GET dnd.info"
            },
            {
              "label": "GET dnd.setSnooze"
            },
            {
              "label": "GET dnd.teamInfo"
            },
            {
              "label": "GET emoji.list"
            },
            {
              "label": "GET files.info"
            },
            {
              "label": "GET files.list"
            },
            {
              "label": "GET groups.history"
            },
            {
              "label": "GET groups.info"
            },
            {
              "label": "GET groups.list"
            },
            {
              "label": "GET groups.replies"
            },
            {
              "label": "GET im.history"
            },
            {
              "label": "GET im.list"
            },
            {
              "label": "GET im.replies"
            },
            {
              "label": "GET mpim.history"
            },
            {
              "label": "GET mpim.list"
            },
            {
              "label": "GET mpim.replies"
            },
            {
              "label": "GET pins.list"
            },
            {
              "label": "GET reactions.get"
            },
            {
              "label": "GET reactions.list"
            },
            {
              "label": "GET reminders.info"
            },
            {
              "label": "GET reminders.list"
            },
            {
              "label": "GET rtm.start"
            },
            {
              "label": "GET rtm.connect"
            },
            {
              "label": "GET search.all"
            },
            {
              "label": "GET search.files"
            },
            {
              "label": "GET search.messages"
            },
            {
              "label": "GET stars.list"
            },
            {
              "label": "GET team.accessLogs"
            },
            {
              "label": "GET team.billableInfo"
            },
            {
              "label": "GET team.info"
            },
            {
              "label": "GET team.integrationLogs"
            },
            {
              "label": "GET team.profile.get"
            },
            {
              "label": "GET usergroups.list"
            },
            {
              "label": "GET usergroups.users.list"
            },
            {
              "label": "GET users.deletePhoto"
            },
            {
              "label": "GET users.getPresence"
            },
            {
              "label": "GET users.identity"
            },
            {
              "label": "GET users.info"
            },
            {
              "label": "GET users.list"
            },
            {
              "label": "GET users.lookupByEmail"
            },
            {
              "label": "GET users.profile.get"
            }
        ]
      }
    },
    {
      "label": "Headers",
      "name": "headers",
      "description": "Let the client and the server pass additional information with the HTTP request in a key value format. (e.g. key=ABC123)",
      "type": "keyValue"
    },
    {
      "label": "Query Params",
      "name": "params",
      "description": "Parameters attached to the end of a url in a key value format. (e.g. key=ABC123)",
      "type": "keyValue"
    },
    {
      "label": "Body",
      "name": "body",
      "type": "json",
      "description": "Content to be sent to the server.",
      "options": {
        "allowContextSelector": "false"
      }
    },
    {
      "label": "Event",
      "name": "events",
      "type": "dropDown",
      "description": "Select event",
      "multiplicity": "one",
      "options": {
        "possibleValues": [
          {
            "label": "File Downloaded",
            "name": "fileDownloaded"
          }
        ],
        "allowContextSelector": "false"
      }
    },
    {
      "label": "Override Settings",
      "name": "overrideSettings",
      "type": "boolean",
      "description": "If true, allows adding configurations",
      "defaultValue": false,
      "options": {
        "allowContextSelector": "false"
      }
    },
    {
      "label": "Follow Redirects",
      "name": "followRedirects",
      "type": "boolean",
      "description": "Follow the redirects when a HTTP request is executed",
      "visibility": "config.overrideSettings",
      "defaultValue": false,
      "options": {
        "allowContextSelector": "false"
      }
    },
    {
      "label": "Download",
      "name": "download",
      "type": "boolean",
      "description": "Indicates that the resource has to be downloaded into a file instead of returning it in the response.",
      "visibility": "config.overrideSettings && config.events != \"fileDownloaded\"",
      "defaultValue": false,
      "options": {
        "allowContextSelector": "false"
      }
    },
    {
      "label": "File Name",
      "name": "fileName",
      "description": "If provided, the file will be stored with this name. If empty the file name will be calculated from the URL.",
      "visibility": "(config.overrideSettings && config.download) || config.events === \"fileDownloaded\"",
      "type": "text",
      "options": {
        "allowContextSelector": "true"
      }
    },
    {
      "label": "Full Response",
      "name": "fullResponse",
      "type": "boolean",
      "description": "Include extended information about response",
      "visibility": "config.overrideSettings",
      "defaultValue": false,
      "options": {
        "allowContextSelector": "false"
      }
    },
    {
      "label": "Connection timeout",
      "name": "connectionTimeout",
      "description": "Connect timeout interval, in milliseconds (0 = infinity). Default value: 5000 ms (5 sec)",
      "visibility": "config.overrideSettings",
      "type": "text",
      "defaultValue": "5000",
      "typeOptions": {
        "validation": {
          "function": "!config.connectionTimeout || utils.isPlaceholder(config.connectionTimeout) || utils.getInteger(config.connectionTimeout) >= 0",
          "message": "The time must be a valid placeholder or a positive integer greater than or equal to 0. "
        }
      },
      "options": {
        "allowContextSelector": "false"
      }
    },
    {
      "label": "Read timeout",
      "name": "readTimeout",
      "description": "Read timeout interval, in milliseconds (0 = infinity). Default value: 60000 ms (60 sec)",
      "visibility": "config.overrideSettings",
      "type": "text",
      "defaultValue": "60000",
      "typeOptions": {
        "validation": {
          "function": "!config.readTimeout || utils.isPlaceholder(config.readTimeout) || utils.getInteger(config.readTimeout) >= 0",
          "message": "The time must be a valid placeholder or a positive integer greater than or equal to 0. "
        }
      },
      "options": {
        "allowContextSelector": "false"
      }
    }
  ],
  "outputs": [
    {
      "label": "Response",
      "name": "response",
      "type": "object",
      "description": "The response to external URL"
    }
  ]
}